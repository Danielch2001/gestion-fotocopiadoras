{"ast":null,"code":"useEffect(() => {\n  if (!user || user.rol !== \"admin\") {\n    navigate(\"/login\");\n    return;\n  }\n  const fetchFotocopiadoras = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/fotocopiadoras\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${user.token}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error(\"Error al obtener los datos\");\n      }\n      const data = await response.json();\n      console.log(\"ðŸ“Š Datos recibidos:\", data); // <-- Verifica si los datos llegan correctamente\n      setFotocopiadoras(data);\n    } catch (error) {\n      console.error(\"ðŸš¨ Error al obtener fotocopiadoras:\", error);\n      setError(\"No se pudieron cargar los datos.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  fetchFotocopiadoras();\n}, [user, navigate]);","map":{"version":3,"names":["useEffect","user","rol","navigate","fetchFotocopiadoras","response","fetch","method","headers","Authorization","token","ok","Error","data","json","console","log","setFotocopiadoras","error","setError","setLoading"],"sources":["C:/gestion-fotocopiadoras/frontend/src/components/GestionFotocopiadoras.js"],"sourcesContent":["useEffect(() => {\r\n    if (!user || user.rol !== \"admin\") {\r\n        navigate(\"/login\");\r\n        return;\r\n    }\r\n\r\n    const fetchFotocopiadoras = async () => {\r\n        try {\r\n            const response = await fetch(\"http://localhost:5000/api/fotocopiadoras\", {\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${user.token}`,\r\n                },\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(\"Error al obtener los datos\");\r\n            }\r\n\r\n            const data = await response.json();\r\n            console.log(\"ðŸ“Š Datos recibidos:\", data); // <-- Verifica si los datos llegan correctamente\r\n            setFotocopiadoras(data);\r\n        } catch (error) {\r\n            console.error(\"ðŸš¨ Error al obtener fotocopiadoras:\", error);\r\n            setError(\"No se pudieron cargar los datos.\");\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    fetchFotocopiadoras();\r\n}, [user, navigate]);\r\n\r\n"],"mappings":"AAAAA,SAAS,CAAC,MAAM;EACZ,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,GAAG,KAAK,OAAO,EAAE;IAC/BC,QAAQ,CAAC,QAAQ,CAAC;IAClB;EACJ;EAEA,MAAMC,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,0CAA0C,EAAE;QACrEC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClCC,aAAa,EAAE,UAAUR,IAAI,CAACS,KAAK;QACvC;MACJ,CAAC,CAAC;MAEF,IAAI,CAACL,QAAQ,CAACM,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;MACjD;MAEA,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MAClCC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEH,IAAI,CAAC,CAAC,CAAC;MAC1CI,iBAAiB,CAACJ,IAAI,CAAC;IAC3B,CAAC,CAAC,OAAOK,KAAK,EAAE;MACZH,OAAO,CAACG,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;MAC3DC,QAAQ,CAAC,kCAAkC,CAAC;IAChD,CAAC,SAAS;MACNC,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAEDhB,mBAAmB,CAAC,CAAC;AACzB,CAAC,EAAE,CAACH,IAAI,EAAEE,QAAQ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}